/* You can add global styles to this file, and also import other style files */
@import "~bootstrap/scss/bootstrap";

$primary-hue: 210;
$primary-color: hsl($primary-hue, 75%, 50%);

* {
  outline: none;
}

::-webkit-input-placeholder {
  color: hsl(0, 0%, 75%);
}

::-webkit-scrollbar {
  width: 0.75rem;
  height: 0.75rem;
  cursor: pointer;
}

::-webkit-scrollbar-track {
  background: hsla(0, 100%, 100%, 0.5);
}

::-webkit-scrollbar-thumb {
  cursor: pointer;
  background: hsl(0, 0%, 80%);
  border-radius: 1rem;

  &:hover {
    background: hsl(0, 0%, 75%);
  }
}

body {
  background: hsl($primary-hue, 75%, 95%) !important;
  font-family: 'Source Sans Pro', 'Cabin', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;
}

a {
  color: hsl($primary-hue, 100%, 50%);
  cursor: pointer;
  &::selection {
    appearance: none;
  }
}
a.link-lighter {
  color: hsl($primary-hue, 18%, 53%) !important;
  &:hover {
    color: hsl($primary-hue, 18%, 47%) !important;
  }
}

$bg-color-list: (
  "primary": $primary-color,
  "green": hsl(125, 78%, 68%),
  "green-dark": hsl(125, 48%, 51%),
  "yellow": hsl(72, 100%, 75%),
  "red": hsl(12, 48%, 51%)
);
@each $color in $bg-color-list {
  .bg-color-#{nth($color, 1)} { background-color: nth($color, 2) !important; }
}

$text-color-list: (
  "primary": $primary-color,
  "dark": hsl($primary-hue, 65%, 17%),
  "light": hsl($primary-hue, 27%, 47%),
  "lighter": hsl($primary-hue, 18%, 69%),
  "lightest": hsl($primary-hue, 62%, 90%),
  "red": hsl(12, 48%, 51%)
);
@each $color in $text-color-list {
  .text-color-#{nth($color, 1)} { color: nth($color, 2) !important; }
}
@mixin text-color($shade) {
  @if map-has-key($map: $text-color-list, $key: $shade) {
    color: #{map-get($text-color-list, $shade)} !important;
  }
}

.border-color-primary {
  border-color: $primary-color !important;
}

$font-size-list: (
  "xs": 0.8,
  "sm": 0.9,
  "base": 1,
  "lg": 1.25,
  "xl": 1.5,
  "2xl": 1.75,
  "3xl": 2
);
@each $value in $font-size-list {
  .text-size-#{nth($value, 1)} {
    font-size: nth($value, 2) + rem !important;
  }
}
@mixin text-size($size) {
  font-size: #{map-get($font-size-list, $size)}rem !important;
}

$font-weight-list: (
  "light": 300,
  "normal": 400,
  "medium": 600,
  "bold": 700
);
@each $value in $font-weight-list {
  .font-weight-#{nth($value, 1)} {
    font-weight: #{nth($value, 2)} !important;
  }
}
@mixin text-weight($weight) {
  font-weight: #{map-get($font-weight-list, $weight)};
}

@mixin text($t_size: 'base', $t_color: 'dark', $t_weight: 'normal') {
  @include text-size($t_size);
  @include text-color($t_color);
  @include text-weight($t_weight);
}

.source-sans-pro {
  font-family: 'Source Sans Pro', 'Cabin', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;
}
.cabin {
  font-family: 'Cabin', 'Source Sans Pro', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;
}
.sans {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif !important;
}
@mixin cabin {
  font-family: 'Cabin', 'Source Sans Pro', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif !important;
}

$border-sizes: 1 2 3 4 6 8;

@each $size in $border-sizes {
  .border-t-#{$size} { border-top: $size + px solid; }
  .border-r-#{$size} { border-right: $size + px solid; }
  .border-b-#{$size} { border-bottom: $size + px solid; }
  .border-l-#{$size} { border-left: $size + px solid; }
}

$border-radius-list: (
  "sm": 0.25,
  "base": 0.325,
  "lg": 0.5,
  "full": 9
);
@each $radius in $border-radius-list {
  .rounded-#{nth($radius, 1)} { border-radius: nth($radius, 2) + rem !important; }
}
@mixin rounded($size) {
  border-radius: #{map-get($border-radius-list, $size)}rem !important;
}

.cursor-pointer {
  cursor: pointer !important;
}
@mixin pointer() {
  cursor: pointer !important;
}

.no-selection::selection {
  appearance: none !important;
}
@mixin no-selection() {
  &::selection { appearance: none; }
}

.no-underline {
  text-decoration: none !important;
}

// styles

a.logo {
  @include text('3xl', 'primary', 'medium');
  text-decoration: none !important;
}

@media all and (max-width: 576px) {
  .form-container {
    width: 90% !important;
    form.auth-form { width: 100% !important; }
  }
}

form.auth-form {
  width: 300px;

  label {
    margin: 0;
  }

  input, select {
    @include cabin;
    display: block;
    width: 100%;
    padding: 0.5rem 0.75rem !important;
    border-radius: 0.25rem !important;
    $color: hsl(0, 0%, 95%);
    border: 2px solid transparent;
    background: $color;
    transition: all .1s ease-in-out;

    &:focus {
      background: transparent;
      border-color: $color;
    }
  }

  select {
    @include pointer;
    @include cabin;
    padding: 0.5rem !important;
  }

  button {
    @include rounded('full');
    @include cabin;
    @include pointer;
    @include text-size('sm');
    color: white !important;
    border: none !important;
    letter-spacing: 0.05rem;
    outline: none;
    transition: all .1s ease-in-out;
    padding: 10px 2rem;

    &.disabled {
      opacity: 0.5;
      box-shadow: none !important;
      transform: none !important;
      cursor: not-allowed;
    }

    &:hover {
      box-shadow: 0 2px 8px hsla(247, 76%, 6%, 0.25);
      transform: translateY(-1px);
    }

    &:active {
      box-shadow: inset 0 2px 10px 0 hsla(0, 0%, 0%, 0.175);
      transform: translateY(0);
      transition: none;
    }
  }

  .error {
    @include text('xs', 'red', 'bold');
    @include cabin;
    height: 1.2rem;
    line-height: 1.2rem;
    text-align: right !important;
    margin-right: 0.25rem;
  }
}